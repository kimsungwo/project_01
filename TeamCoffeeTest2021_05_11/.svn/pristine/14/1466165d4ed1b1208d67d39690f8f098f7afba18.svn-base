<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<default-servlet-handler />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 타일즈 설정 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
   </beans:bean>

   
   <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
    </beans:bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		 <beans:property name="order" value="2" />
	</beans:bean>
	
	<context:component-scan base-package="com.teamcoffee.*.controller" />
	
	<!-- interceptor클래스의 객체를 생성 -->
	<beans:bean id="memberAuthInterceptor" class="com.teamcoffee.interceptor.MemberAuthInterceptor"></beans:bean>
	<beans:bean id="ownerAuthInterceptor" class="com.teamcoffee.interceptor.OwnerAuthInterceptor"></beans:bean>
	<beans:bean id="memberRememberInterceptor" class="com.teamcoffee.interceptor.MemberRememberInterceptor"></beans:bean>
	<beans:bean id="ownerRememberInterceptor" class="com.teamcoffee.interceptor.OwnerRememberInterceptor"></beans:bean>
	
	<!-- interceptor가 실행된 요청을 지정 -->
	<interceptors>
		<interceptor>
			<mapping path="/member/*"/>
			<exclude-mapping path="/member/joinMember"/>
			<exclude-mapping path="/member/memIdCheck"/>
			<exclude-mapping path="/member/memEmailCheck"/>
			<exclude-mapping path="/member/insertMember"/>
			<exclude-mapping path="/member/memberLoginProcess"/>
			<exclude-mapping path="/member/find_idForm"/>
			<exclude-mapping path="/member/find_pwForm"/>
			<beans:ref bean="memberAuthInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/owner/*"/>
			<exclude-mapping path="/owner/joinOwner"/>
			<exclude-mapping path="/owner/ownerIdCheck"/>
			<exclude-mapping path="/owner/ownerEmailCheck"/>
			<exclude-mapping path="/owner/insertOwner"/>
			<exclude-mapping path="/owner/ownerLoginProcess"/>
			<exclude-mapping path="/owner/find_idFormOwner"/>
			<exclude-mapping path="/owner/find_pwFormOwner"/>
			<beans:ref bean="ownerAuthInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/*/*"/>
			<beans:ref bean="memberRememberInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/*/*"/>
			<beans:ref bean="ownerRememberInterceptor"/>
		</interceptor> 
	</interceptors>
		
</beans:beans>
