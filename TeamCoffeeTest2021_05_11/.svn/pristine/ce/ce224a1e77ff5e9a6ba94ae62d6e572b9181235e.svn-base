package com.teamcoffee.owner.service;

import java.util.List;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.teamcoffee.cafe.vo.CafeChainVO;
import com.teamcoffee.cafe.vo.CafeVO;
import com.teamcoffee.owner.vo.OwnerVO;
import com.teamcoffee.util.sha256;

@Service("ownerService")
public class OwnerServiceImpl implements OwnerService{
	@Autowired
	private SqlSessionTemplate sqlSession;

	@Override
	public String ownerIdCheck(OwnerVO ownerVO) {
		return sqlSession.selectOne("ownerIdCheck", ownerVO);
	}
	
	@Override
	public String ownerEmailCheck(OwnerVO ownerVO) {
		return sqlSession.selectOne("ownerEmailCheck", ownerVO);
	}
	
	@Override
	public String getSaltByOwnerId(OwnerVO ownerVO) {
		return sqlSession.selectOne("getSaltByOwnerId", ownerVO);
	}
	
	@Override
	public void insertOwner(OwnerVO ownerVO) {
		String salt = sha256.generateSalt();
		ownerVO.setSalt(salt);
		
		String ownerPw = ownerVO.getOwnerPw();
		ownerPw = sha256.getEncrypt(ownerPw, salt);
		ownerVO.setOwnerPw(ownerPw);
		sqlSession.insert("insertOwner", ownerVO);
	}

	@Override
	public OwnerVO ownerLoginProcess(OwnerVO ownerVO) {
		return sqlSession.selectOne("ownerLoginProcess", ownerVO);
	}

	@Override
	public OwnerVO selectOwnerInfo(OwnerVO ownerVO) {
		return sqlSession.selectOne("selectOwnerInfo", ownerVO);
	}

	@Override
	public void insertCafe(CafeVO cafeVO) {
		sqlSession.insert("insertCafe", cafeVO);
		
	}

	@Override
	public String selectChainLogo(CafeChainVO cafeChainVO) {
		return sqlSession.selectOne("selectChainLogo", cafeChainVO);
	}

	@Override
	public List<CafeVO> CafeInfoList(OwnerVO ownerVO) {
		return sqlSession.selectList("CafeInfoList", ownerVO);
	}

	@Override
	public CafeVO selectCafeInfo(CafeVO cafeVO) {
		return sqlSession.selectOne("selectCafeInfo", cafeVO);
	}

	@Override
	public void cafeInfoUpdate(CafeVO cafeVO) {
		sqlSession.update("cafeInfoUpdate", cafeVO);
	}

	@Override
	public void deleteCafe(CafeVO cafeVO) {
		sqlSession.delete("deleteCafe", cafeVO);
	}
	
	//매장주 프로필 정보수정
		@Override
		public void myPageUpdateOwner(OwnerVO ownerVO) {
			String salt = sha256.generateSalt();
			ownerVO.setSalt(salt);
			
			String ownerPw = ownerVO.getOwnerPw();
			ownerPw = sha256.getEncrypt(ownerPw, salt);
			ownerVO.setOwnerPw(ownerPw);
			sqlSession.update("myPageUpdateOwner",ownerVO);
		}
	
	
	
	

}
