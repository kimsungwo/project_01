<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문 mapper태그 안에 작성 -->
<mapper namespace="memberMapper">
	<!-- resultmap 작성 -->
	<resultMap type="com.teamcoffee.member.vo.MemberVO" id="member">
		<id     column="MEM_CODE"		 property="memCode"/>
		<result column="MEM_ID" 		 property="memId"/>
		<result column="MEM_PW"			 property="memPw"/>
		<result column="MEM_NICKNAME" 	 property="memNickname"/>
		<result column="MEM_REG_DATE" 	 property="memRegDate"/>
		<result column="MEM_ADDR" 		 property="memAddr"/>
		<result column="MEM_ADDR_DETAIL" property="memAddrDetail"/>
		<result column="MEM_TEL" 		 property="memTel"/>
		<result column="MEM_EMAIL" 		 property="memEmail"/>
		<result column="SALT"			 property="salt"/>
		<result column="MEM_POINT" 	  	 property="memPoint"/>
		<result column="MEM_GRADE"		 property="memGrade"/>
		<result column="MEM_PROFILE_IMG" property="memProfileImg"/>
		<result column="MEM_LEFT"		 property="memLeft"/>
		<result column="SESSION_KEY" 	 property="sessionKey"/>
		<result column="SESSION_LIMIT"   property="sessionLimit"/>
	</resultMap>
	
	<resultMap type="com.teamcoffee.member.vo.PointVO" id="point">
		<id     column="POINT_CODE"			property="pointCode"/>
		<result column="MEM_CODE" 		 	property="memCode"/>
		<result column="POINT_CHANGE_NAME" 	property="pointChangeName"/>
		<result column="POINT_CHANGE" 		property="pointChange"/>
		<result column="POINT_DATE"			property="pointDate"/>
		<result column="BUY_CODE"			property="buyCode"/>
	</resultMap>
	
	<!-- 아이디 중복체크 -->
	<select id="memIdCheck" resultType="String">
		SELECT MEM_ID
		FROM DJV_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="memEmailCheck" resultType="String">
		SELECT MEM_Email
		FROM DJV_MEMBER
		WHERE MEM_Email = #{memEmail}
	</select>
	
	<!-- 일반회원 회원가입 처리 -->
	<insert id="insertMember">
		INSERT INTO DJV_MEMBER (
			MEM_CODE
			, MEM_ID
			, MEM_PW
			, MEM_NICKNAME
			, MEM_ADDR
			, MEM_ADDR_DETAIL
			, MEM_PROFILE_IMG
			, MEM_TEL
			, MEM_EMAIL
			, SALT
		) VALUES (
			(SELECT 'MEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MEM_CODE, 5))) + 1, 1), 3, '0') FROM DJV_MEMBER)
			, #{memId}
			, #{memPw}
			, #{memNickname}
			, #{memAddr}
			, #{memAddrDetail}
			, #{memProfileImg}
			, #{memTel}
			, #{memEmail}
			, #{salt}
		)
	</insert>
	
	<!-- salt값 셀렉트 -->
	<select id="getSaltByMemId" resultType="String">
		SELECT SALT
		FROM DJV_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 일반회원 로그인 처리 -->
	<select id="memberLoginProcess" resultMap="member">
		SELECT MEM_CODE 
			, MEM_ID
			, MEM_NICKNAME
		FROM DJV_MEMBER
		WHERE MEM_ID = #{memId}
		AND MEM_PW = #{memPw}	
	</select>
		<!-- 일반회원 개인정보조회 -->
	<select id="memberInfo" resultMap="member">
		SELECT MEM_ID
			, MEM_PW
			, MEM_CODE
			, MEM_NICKNAME
			, MEM_ADDR
			, MEM_ADDR_DETAIL
			, MEM_TEL
			, MEM_EMAIL 
			, MEM_GRADE
			, MEM_POINT
			, MEM_PROFILE_IMG
			, MEM_REG_DATE
		FROM DJV_MEMBER
		WHERE MEM_ID = #{memId}
	</select>
		<!-- 일반회원 정보수정 -->
	<update id="myPageUpdate" >
		UPDATE DJV_MEMBER
		SET
		MEM_ID = #{memId}
		<if test="!memPw.equals('')">
		, MEM_PW = #{memPw}
		</if>
		<if test="!memNickname.equals('')">
		, MEM_NICKNAME = #{memNickname}
		</if>
		<if test="!memAddr.equals('')">
		, MEM_ADDR = #{memAddr}
		</if>
		<if test="!memAddrDetail.equals('')">
		, MEM_ADDR_DETAIL = #{memAddrDetail}		
		</if>
		<if test="!memTel.equals('')">
		, MEM_TEL = #{memTel}
		</if>
		, SALT = #{salt}
		WHERE MEM_ID = #{memId}
	</update>
	<!-- 일반회원 탈퇴  -->
	<delete id="deleteMember">
	DELETE DJV_MEMBER
	WHERE MEM_CODE = #{memCode}
	AND MEM_PW = #{memPw}
	</delete>
	<!-- 아이디 찾기 -->
	<select id="find_id" parameterType="String" resultMap="member">
		SELECT MEM_ID
		FROM DJV_MEMBER
		WHERE MEM_EMAIL = #{memEmail}
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="find_pw"  resultMap="member">
		SELECT MEM_CODE
		FROM DJV_MEMBER
		WHERE MEM_EMAIL = #{memEmail}
		AND MEM_ID = #{memId}
	</select>
		<!-- 비밀번호 수정 -->
	<update id="pwUpdate">
		UPDATE DJV_MEMBER
		SET
		MEM_PW = #{memPw}
		, SALT = #{salt}
		WHERE MEM_ID = #{memId}
	</update>
	
		<!-- 일반회원탈퇴처리 중간과정-->
	<select id="memberDropOut" resultMap="member">
		SELECT MEM_ID
			, MEM_PW
			, MEM_CODE 
		FROM DJV_MEMBER
		WHERE MEM_ID = #{memId}
		AND MEM_PW = #{memPw}	
	</select>
	
	<!-- 로그인유지 -->
	<update id="keepLogin">
		UPDATE DJV_MEMBER
		SET SESSION_KEY = #{sessionId}
			, SESSION_LIMIT = #{sessionLimit}
		WHERE MEM_ID = #{memId}	
	</update>
	
	<!-- 세션키검증 -->
	<select id="checkUserWithSessionKey" resultMap="member">
		SELECT * FROM DJV_MEMBER 
		WHERE SESSION_KEY = #{value}
	</select>
	
	<!-- 포인트 내역 추가 -->
	<insert id="insertPointHistory">
		INSERT INTO DJV_POINT (
			POINT_CODE
			, MEM_CODE
			, POINT_CHANGE_NAME
			, POINT_CHANGE
			, BUY_CODE
		) VALUES (
			(SELECT 'PO_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(POINT_CODE, 4))) + 1, 1), 3, '0') FROM DJV_POINT)
			, #{memCode}
			, #{pointChangeName}
			, #{pointChange}
			, #{buyCode}
		)
	</insert>
	
	<!-- 포인트 사용 -->
	<update id="updateMemPoint">
		UPDATE DJV_MEMBER
		SET MEM_POINT = MEM_POINT + #{memPoint}
		WHERE MEM_CODE = #{memCode}
	</update>
	
	<!-- 구매내역에 포인트사용 가져오기 -->
	<select id="selectBuyPoint" resultType="int">
		SELECT POINT_CHANGE
		FROM DJV_POINT
		WHERE BUY_CODE = #{buyCode}
	</select>
	
</mapper>
	
