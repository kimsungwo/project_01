<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문 mapper태그 안에 작성 -->
<mapper namespace="ownerMapper">
	<!-- resultmap 작성 -->
	<resultMap type="com.teamcoffee.owner.vo.OwnerVO"   id="owner">
		<id     column="OWNER_CODE"		   property="ownerCode"/>
		<result column="OWNER_ID" 		   property="ownerId"/>
		<result column="OWNER_PW" 		   property="ownerPw"/>
		<result column="OWNER_NAME"        property="ownerName"/>
		<result column="OWNER_REG_DATE"    property="ownerRegDate"/>
		<result column="OWNER_ADDR"        property="ownerAddr"/>
		<result column="OWNER_ADDR_DETAIL" property="ownerAddrDetail"/>
		<result column="OWNER_TEL" 		   property="ownerTel"/>
		<result column="OWNER_EMAIL"       property="ownerEmail"/>
	</resultMap>
	
	<!-- 매장주 회원가입 처리 -->
	<insert id="insertOwner">
		INSERT INTO DJV_OWNER (
			OWNER_CODE
			, OWNER_ID
			, OWNER_PW
			, OWNER_NAME
			, OWNER_ADDR
			, OWNER_ADDR_DETAIL
			, OWNER_TEL
			, OWNER_EMAIL
		) VALUES (
			(SELECT 'OWNER_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(OWNER_CODE, 7))) + 1, 1), 3, '0') FROM DJV_OWNER)
			, #{ownerId}
			, #{ownerPw}
			, #{ownerName}
			, #{ownerAddr}
			, #{ownerAddrDetail}
			, #{ownerTel}
			, #{ownerEmail}
		)
	</insert>
	
	<!-- 매장주 로그인 처리 -->
	<select id="ownerLoginProcess" resultMap="owner">
		SELECT OWNER_CODE
			, OWNER_ID
			, OWNER_NAME
		FROM DJV_OWNER
		WHERE OWNER_ID = #{ownerId}
		AND OWNER_PW = #{ownerPw}	
	</select>
	
	<!-- 매장주 프로필 조회 -->
	<select id="selectOwnerInfo" resultMap="owner">
		SELECT OWNER_CODE
			, OWNER_ID
			, OWNER_NAME
			, OWNER_REG_DATE
			, OWNER_ADDR
			, OWNER_ADDR_DETAIL
			, OWNER_TEL
			, OWNER_EMAIL
		FROM DJV_OWNER
		WHERE OWNER_ID = #{ownerId}	
	</select>
	
	<!-- 매장 등록 처리 -->
	<insert id="insertCafe">
		INSERT INTO DJV_CAFE (
			CAFE_CODE
			, CAFE_NAME
			, CAFE_OWNER_CODE
			, CAFE_CHAIN_CODE
			, CAFE_HOURS
			, CAFE_TEL
			, CAFE_ADDR
			, CAFE_ADDR_DETAIL
			, CAFE_INFO
		) VALUES (
			(SELECT 'CAFE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CAFE_CODE, 6))) + 1, 1), 3, '0') FROM DJV_CAFE)
			, #{cafeName}
			, #{cafeOwnerCode}
			, #{cafeChainCode}
			, #{cafeHours}
			, #{cafeTel}
			, #{cafeAddr}
			, #{cafeAddrDetail}
			, #{cafeInfo}
		)
	</insert>
</mapper>
	
	<!--
	<insert id="insertCategory">
		INSERT INTO BOOK_CATEGORY (
			CATEGORY_CODE
			, CATEGORY_NAME
			, CREATE_USER
		) VALUES (
			(SELECT 'CATE_' || LPAD((NVL(MAX(TO_NUMBER(SUBSTR(CATEGORY_CODE, 6, 3))), 0) + 1), 3, '0')
			FROM BOOK_CATEGORY)
			, #{categoryName}
			, #{createUser}
		)
	</insert>
	
	<delete id="deleteCategory">
		DELETE BOOK_CATEGORY
		WHERE CATEGORY_CODE = #{categoryCode}
	</delete>
	
	<insert id="insertItem">
		INSERT INTO BOOK_ITEM (
			ITEM_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, ITEM_STOCK
			, ITEM_INFO
			, CREATE_USER
			, CATEGORY_CODE
		) VALUES (
			(SELECT 'BOOK_' || LPAD((NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE, 6, 3))), 0) + 1), 3, '0')
			FROM BOOK_ITEM)
			, #{itemName}
			, #{itemPrice}
			, #{itemStock}
			, #{itemInfo}
			, #{createUser}
			, #{categoryCode}
		)
	</insert>
	
	<insert id="insertImgs">
		INSERT INTO BOOK_ITEM_IMAGE (
			IMG_CODE
			, IMG_NAME
			, ITEM_CODE
			, IS_MAIN
		)
		<foreach collection="imgList" item="imgInfo" separator="UNION ALL">
			SELECT
				#{imgInfo.imgCode}
				, #{imgInfo.imgName}
				, #{imgInfo.itemCode}
				, #{imgInfo.isMain}
			FROM DUAL
		</foreach>
	</insert>
	
	<select id="selectNextImgNum" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE, 5))) + 1, 1)
		FROM BOOK_ITEM_IMAGE
	</select>
	
	<select id="selectMaxItemCode" resultType="String">
		SELECT MAX(ITEM_CODE)
		FROM BOOK_ITEM
	</select>
	
	<select id="selectSalesList" resultMap="buyMapper.buyView">
		SELECT BUY_CODE
			, ITEM_CODE
			, ITEM_PRICE			
			, BUY_QUANTITY
			, BUYER
			, NAME
			, BUY_DATE
		FROM BUY_INFO_VIEW
		<![CDATA[
		WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') >= #{firstDate}
		AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') <= #{nowDate}
		]]>
		<if test="!searchValue.equals('')">
		AND LOWER(BUYER) LIKE LOWER('%' || #{searchValue} || '%')
		OR LOWER(NAME) LIKE LOWER('%' || #{searchValue} || '%')
		</if>
		ORDER BY BUY_CODE DESC
	</select>
	
	<select id="selectBuyInfoDetail" resultMap="buyMapper.buyView">
		SELECT BUY_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, IMG_NAME
			, BUY_QUANTITY
			, TOTAL_PRICE
		FROM BUY_INFO_VIEW
		WHERE BUY_CODE = #{buyCode}
	</select>
	
	<select id="selectManageItemList" resultMap="itemMapper.itemView">
		SELECT ITEM_CODE
			, ITEM_NAME
			, IMG_NAME
			, ITEM_PRICE
			, ITEM_STOCK
			, ITEM_STATUS
		FROM ITEM_VIEW
		WHERE IS_MAIN = 'Y'
		<if test="categoryCode != null and !categoryCode.equals('')">
		AND CATEGORY_CODE = #{categoryCode}
		</if>
		<if test="itemName != null and !itemName.equals('')">
		AND LOWER(ITEM_NAME) LIKE '%' || LOWER(#{itemName}) || '%'
		</if>
		<if test="itemStatuses != null">
		AND ITEM_STATUS IN 
			<foreach collection="itemStatuses" open="(" separator="," close=")" item="itemStatus">
			${itemStatus}			
			</foreach>
		</if>
		ORDER BY
		<choose>
			<when test="order != null and !order.equals('') or sort != null and !sort.equals('')">
			${order} ${sort}
			</when>
			<otherwise>
			ITEM_NAME
			</otherwise>
		</choose>
	</select>
	
	<update id="changePrice">
		UPDATE BOOK_ITEM
		SET ITEM_PRICE = #{itemPrice}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	
	<update id="changeStock">
		UPDATE BOOK_ITEM
		SET ITEM_STOCK = #{itemStock}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	
	<update id="changeStatus">
		UPDATE BOOK_ITEM
		SET ITEM_STATUS = #{itemStatus}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	
	<select id="selectOWNERberList" resultMap="OWNERberMapper.OWNERberView">
		SELECT ID
			, NAME
			, TEL
			, OWNERBERSHIP
			, REG_DATE
		FROM OWNERBER_VIEW
		ORDER BY REG_DATE DESC
	</select>
	
	<select id="selectOWNERberDetail" resultMap="OWNERberMapper.OWNERberView">
		SELECT ID
			, NAME
			, TEL
			, ADDR_ALL
			, EMAIL
			, GENDER
			, OWNERBERSHIP
			, TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS REG_DATE
		FROM OWNERBER_VIEW
		WHERE ID = #{id}
	</select>
	  -->
